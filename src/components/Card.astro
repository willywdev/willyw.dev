---
const { color, title, subtitle } = Astro.props;
function darkenHexColor(hexColor, percent) {
  // Ensure the percent is between 0 and 100
  percent = Math.min(100, Math.max(0, percent));
  // Convert hex to RGB
  let r = parseInt(hexColor.slice(1, 3), 16);
  let g = parseInt(hexColor.slice(3, 5), 16);
  let b = parseInt(hexColor.slice(5, 7), 16);
  // Darken the color based on the percentage
  r = Math.round((r * (100 - percent)) / 100);
  g = Math.round((g * (100 - percent)) / 100);
  b = Math.round((b * (100 - percent)) / 100);
  // Convert back to hex
  const darkenedHex = `#${(r * 0x10000 + g * 0x100 + b)
    .toString(16)
    .padStart(6, "0")}`;
  return darkenedHex;
}
const darkenedColor = darkenHexColor(color, 35);
---

<section
  class=`flex flex-col relative animate-fade-up animate-once animate-delay-[100ms] animate-ease-linear w-72`>
  <div
    class='card-title flex flex-col items-center justify-center py-2 rounded-se-xl rounded-ss-xl'>
    <h2 class='text-xl text-white text-left'>{title}</h2>
    <p>{subtitle}</p>
  </div>
  <div
    class='card-text py-2 rounded-ee-xl rounded-es-xl flex items-center justify-center'>
    <slot />
  </div>
</section>

<style scoped define:vars={{ color, darkenedColor }}>
  .card-title {
    background-color: var(--color);
  }
  .card-text {
    background-color: var(--darkenedColor);
  }
</style>
